input {
    kafka {
        bootstrap_servers => "${KAFKA_SERVER}"
        security_protocol => "${KAFKA_SECURITY_PROTOCOL}"
        ssl_keystore_location => "/usr/share/logstash/kafka_secrets/cpro-admin.p12"
        ssl_keystore_password => "${KAFKA_KEY_PASSWORD}"
        ssl_truststore_location => "/usr/share/logstash/kafka_secrets/truststore.jks"
        ssl_truststore_password => "${KAFKA_KEY_PASSWORD}"
        topics => "connectivity.${LOGSTASH_ENVIRONMENT}.globaldeviceservice.StockOrderRequest" 
        auto_offset_reset => "earliest"
        group_id => "${LOGSTASH_ENVIRONMENT}-cmpinventory-stockorderrequest-consumer"
        codec => "json"
        decorate_events => true
    }
}
filter{
	if [eventOperation]=="Delete" {
        mutate {    
            add_field => {
                "[@metadata][elasticsearch_action]" => "delete"
            }
        }
    } else {
        mutate {    
            add_field => {
                "[@metadata][elasticsearch_action]" => "update"
            }
        }
    }    
        mutate {
            remove_field => [ "eventOperation", "@version", "@timestamp" ]
        }
}
output {
        if [@metadata][elasticsearch_action]=="delete"{
		 elasticsearch {
			hosts => "${K8_ELASTIC_URL}"
			user => "${K8_ELASTIC_USERNAME}"
			password => "${K8_ELASTIC_PASSWORD}"			
			index => "${LOGSTASH_ENVIRONMENT}_cmp_stockorderrequest-01"
			document_id => "%{requestId}"
			action => "delete"
            doc_as_upsert => true
            ssl_certificate_verification => true
			cacert => ["/usr/share/logstash/pipeline/k8_elastic_cert.pem"] 
		}
        }
        else{
            elasticsearch {
			hosts => "${K8_ELASTIC_URL}"
			user => "${K8_ELASTIC_USERNAME}"
			password => "${K8_ELASTIC_PASSWORD}"			
			index => "${LOGSTASH_ENVIRONMENT}_cmp_stockorderrequest-01"
			document_id => "%{requestId}"
			action => "update"
            doc_as_upsert => true
            ssl_certificate_verification => true
			cacert => ["/usr/share/logstash/pipeline/k8_elastic_cert.pem"] 
		}
        }

}
