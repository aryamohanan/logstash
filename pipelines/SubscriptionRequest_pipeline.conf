input {
    kafka {
        bootstrap_servers => "${KAFKA_SERVER}"
        security_protocol => "${KAFKA_SECURITY_PROTOCOL}"
        ssl_keystore_location => "/usr/share/logstash/kafka_secrets/cpro-admin.p12"
        ssl_keystore_password => "${KAFKA_KEY_PASSWORD}"
        ssl_truststore_location => "/usr/share/logstash/kafka_secrets/truststore.jks"
        ssl_truststore_password => "${KAFKA_KEY_PASSWORD}"
        topics => "connectivity.${LOGSTASH_ENVIRONMENT}.inventory.subscriptionrequest.index"
        auto_offset_reset => "earliest"
        group_id => "${LOGSTASH_ENVIRONMENT}-inventory-subscriptionrequest-groupId"
        codec => "json"
        decorate_events => true
    }
}
filter{
    mutate{
	    remove_field => ["@timestamp","@version"]
    }
}
output {
   elasticsearch {
			hosts => "${K8_ELASTIC_URL}"
		    user => "${K8_ELASTIC_USERNAME}"
			password => "${K8_ELASTIC_PASSWORD}"			
            document_type => "_doc"
			index => "${LOGSTASH_ENVIRONMENT}_cmp_inventory_subscriptionrequest-01"
			document_id => "%{SubscriptionRequestId}_%{RequestType}"
			action => "update"
			doc_as_upsert => true
            ssl_certificate_verification => true            
            cacert => ["/usr/share/logstash/pipeline/k8_elastic_cert.pem"]  
		}
}
